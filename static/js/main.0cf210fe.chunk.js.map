{"version":3,"sources":["components/Burger/Burger Ingredients/burger_ingredients.module.css","components/Navigation/Side Drawer/side_drawer.module.css","components/Burger/Build Controls/BuildControl/build_control.module.css","components/Navigation/Toolbar/toolbar.module.css","components/UI/Modal/modal.module.css","components/UI/Input/input.module.css","components/Navigation/Navigation Items/Navigation Item/navitem.module.css","components/Burger/Build Controls/build_controls.module.css","components/UI/Button/button.module.css","components/Orders/order.module.css","hoc/Layout/layout.module.css","components/Logo/logo.module.css","assets/images/logo.png","components/Navigation/Navigation Items/navitems.module.css","components/Navigation/Side Drawer/Menu/menu.module.css","components/UI/Backdrop/backdrop.module.css","components/Burger/burger.module.css","components/UI/Spinner/spinner.module.css","components/Orders/CheckoutSummary/CheckoutSummary.module.css","containers/BurgerBuilder/Checkout/Contact Form/contatc-form.module.css","containers/Auth/auth.module.css","hoc/auxiliary.js","components/Logo/logo.js","components/Navigation/Navigation Items/Navigation Item/navigation_item.js","components/Navigation/Navigation Items/navigation_items.js","components/Navigation/Side Drawer/Menu/menu.js","components/Navigation/Toolbar/toolbar.js","components/UI/Backdrop/backdrop.js","components/Navigation/Side Drawer/side_drawer.js","hoc/Layout/layout.js","components/Burger/Burger Ingredients/burger_ingredients.js","components/Burger/burger.js","components/Burger/Build Controls/BuildControl/build_control.js","components/Burger/Build Controls/build_controls.js","components/UI/Modal/modal.js","components/UI/Button/button.js","components/Burger/Order Summary/order_summary.js","axios-order.js","components/UI/Spinner/spinner.js","hoc/GlobalErrorHandler/globalErrorHandler.js","store/actions/auth_actions.js","store/actions/actionTypes.js","containers/BurgerBuilder/burger_builder.js","store/actions/burger_builder_actions.js","components/Orders/CheckoutSummary/checkoutsummary.js","components/UI/Input/input.js","containers/BurgerBuilder/Checkout/Contact Form/contact-form.js","store/actions/order_actions.js","containers/BurgerBuilder/Checkout/checkout.js","components/Orders/order.js","containers/Orders/orders.js","containers/Auth/auth.js","App.js","store/reducers/burger_builder_reducers.js","store/reducers/order_reducers.js","store/reducers/auth_reducers.js","index.js"],"names":["module","exports","Aux","props","children","Logo","className","classes","src","logo","NavigationItem","activeClassName","active","to","link","NavigationItems","Menu","onClick","openClose","DrawerToggle","Toolbar","menuHandler","DesktopOnly","Backdrop","show","backdrop","closebackdrop","SideDrawer","condiitonalClasses","Close","open","Open","closed","join","Layout","state","sideDrawerState","sideDrawerCloseHandler","setState","sideDrawerMenuHandler","prevState","this","content","Component","BurgerIngredients","ingredients","type","styles","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Burger","undefined","transformedIng","Object","keys","map","igKeys","Array","_","igIndex","key","reduce","arr","el","concat","length","BuildControl","Label","label","More","added","Less","remove","disabled","disInfo","BuildControls","price","toFixed","item","addIngredient","removeIngredient","disable","OrderButton","purchasable","ordered","Modal","removebackdrop","showModal","hideModal","Button","btntype","clicked","React","memo","ingList","style","textTransform","cancleorder","continueorder","instance","axios","create","baseURL","Spinner","Loader","globalErrorHandler","WrappedComponent","error","errorConfirmed","reqint","interceptors","request","use","req","resint","response","res","eject","message","authenticate","email","pass","isSignUp","dispatch","authData","password","returnSecureToken","url","post","then","expirationTime","console","log","data","authSuccess","expiresIn","setTimeout","catch","err","authFail","BurgerBuilder","OrderClicked","orderClcikedHandler","removeModal","continueOrder","history","push","pathname","initIngredients","prev","next","disableInfo","ingFromStore","orderSummary","burger","onAddIngredient","onRemoveIngredient","totalPriceFromStore","orderButtonValiadtor","connect","burgerBuilder","totalPrice","errorFormStore","ingName","ingredientName","burgerBuilderActions","get","CheckoutSummary","width","margin","checkoutContinue","checkoutCancle","Input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","optionsFinal","options","display","name","toUpperCase","ContactForm","orderForm","placeholder","validation","isValid","rules","required","city","postalCode","minLength","maxLength","delivery","isOrderPlaceable","orderButtonNotify","validityChecker","itsValid","trim","onChangeHandler","event","elementRef","checkForOrderButton","specificOrderForm","target","toString","includes","placeOrder","e","preventDefault","formData","order","ingredient","contactForm","onPlacingOrder","redirect","ordersFields","fields","id","config","InputField","loading","border","color","onSubmit","orders","orderToPost","orderId","orderData","placeOrderFail","withRouter","Checkout","checkoutContinueHandler","replace","checkoutCancleHandler","goBack","path","match","component","Order","quantity","ingredientsOutput","span","Orders","forFetchingOrders","fetchedOrders","Auth","authForm","isSubmitPossible","submitButtonNotify","checkForSubmitButton","specificAuthForm","onSubmitHandler","onAuth","signingSwitch","prevstate","authFields","errorMessage","authentication","authActions","App","exact","INGREDIENTS_PRICES","cheese","salad","meat","bacon","initialState","reducer","action","newOrder","idToken","localId","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducers","ordersReducers","authReducers","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,YAAc,wCAAwC,SAAW,qCAAqC,OAAS,mCAAmC,OAAS,mCAAmC,KAAO,iCAAiC,OAAS,mCAAmC,MAAQ,kCAAkC,MAAQ,oC,oBCAtVD,EAAOC,QAAU,CAAC,WAAa,gCAAgC,KAAO,0BAA0B,MAAQ,2BAA2B,KAAO,4B,iBCA1ID,EAAOC,QAAU,CAAC,aAAe,oCAAoC,MAAQ,6BAA6B,KAAO,4BAA4B,KAAO,8B,iBCApJD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,YAAc,+B,gBCAhGD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,UAAY,yBAAyB,UAAY,2B,iBCAhGD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,aAAe,4BAA4B,QAAU,yB,kBCAjID,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,OAAS,0B,mBCA5ED,EAAOC,QAAU,CAAC,cAAgB,sCAAsC,YAAc,oCAAoC,OAAS,iC,gBCAnID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,OAAS,yB,iBCA7FD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,sB,2BCAtDD,EAAOC,QAAU,CAAC,QAAU,0B,gBCA5BD,EAAOC,QAAU,CAAC,KAAO,qB,gBCDzBD,EAAOC,QAAU,IAA0B,kC,gBCC3CD,EAAOC,QAAU,CAAC,gBAAkB,oC,iBCApCD,EAAOC,QAAU,CAAC,aAAe,6B,gBCAjCD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,MAAQ,yB,mBCA3DD,EAAOC,QAAU,CAAC,gBAAkB,2C,gBCApCD,EAAOC,QAAU,CAAC,YAAc,oC,gBCAhCD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAc,4B,6MCE3CC,EADH,SAACC,GAAD,OAAWA,EAAMC,U,mDCEd,SAASC,IACtB,OACE,yBAAKC,UAAWC,IAAQF,MACtB,yBAAKG,IAAKC,O,8CCODC,EAVQ,SAACP,GACtB,OACE,wBAAIG,UAAWC,IAAQG,gBACrB,kBAAC,IAAD,CAASC,gBAAiBJ,IAAQK,OAAQC,GAAIV,EAAMW,MACjDX,EAAMC,YCJA,SAASW,IACtB,OAEI,wBAAIT,UAAaC,IAAQQ,iBACrB,kBAAC,EAAD,CAAgBD,KAAM,mBAAtB,UACA,kBAAC,EAAD,CAAgBA,KAAO,WAAvB,UACA,kBAAC,EAAD,CAAgBA,KAAO,SAAvB,iB,qBCPK,SAASE,EAAKb,GAC3B,OACE,yBAAKc,QAASd,EAAMe,UAAWZ,UAAaC,IAAQY,cAClD,8BACA,8BACA,+BCFS,SAASC,EAAQjB,GAC9B,OACE,6BACE,4BAAQG,UAAWC,IAAQa,SACzB,kBAACJ,EAAD,CAAME,UAAWf,EAAMkB,cACvB,yBAAKf,UAAWC,IAAQF,MACtB,kBAACA,EAAD,OAEF,yBAAKC,UAAWC,IAAQe,aACtB,kBAACP,EAAD,S,sCCZK,SAASQ,EAASpB,GAC/B,OAAOA,EAAMqB,KACX,yBAAKlB,UAAWC,IAAQkB,SAAUR,QAASd,EAAMuB,gBAC/C,KCCS,SAASC,EAAWxB,GACjC,IAAIyB,EAAqB,CAACrB,IAAQoB,WAAYpB,IAAQsB,OAItD,OAHI1B,EAAM2B,OACRF,EAAqB,CAACrB,IAAQoB,WAAYpB,IAAQwB,OAGlD,kBAAC,EAAD,KACE,kBAACR,EAAD,CAAUC,KAAMrB,EAAM2B,KAAMJ,cAAevB,EAAM6B,SACjD,4BAAQ1B,UAAWsB,EAAmBK,KAAK,MACzC,yBAAK3B,UAAWC,IAAQF,MACtB,kBAACA,EAAD,OAEF,6BACE,kBAACU,EAAD,S,ICmBKmB,E,4MAhCbC,MAAQ,CACNC,iBAAiB,G,EAGnBC,uBAAyB,WACvB,EAAKC,SAAS,CAAEF,iBAAiB,K,EAGnCG,sBAAwB,WACtB,EAAKD,UAAS,SAACE,GACb,MAAO,CACLJ,iBAAkBI,EAAUJ,qB,uDAMhC,OACE,kBAAC,EAAD,KACE,kBAACT,EAAD,CAEEG,KAAMW,KAAKN,MAAMC,gBACjBJ,OAAQS,KAAKJ,yBAEf,kBAACjB,EAAD,CAASC,YAAaoB,KAAKF,wBAE3B,0BAAMjC,UAAWC,IAAQmC,SAAUD,KAAKtC,MAAMC,e,GA3BjCuC,a,iDC6CNC,E,uKA1CX,IAAIC,EAAc,KAElB,OAAQJ,KAAKtC,MAAM2C,MACjB,IAAK,eACHD,EAAc,yBAAKvC,UAAWyC,IAAOC,cACrC,MACF,IAAK,YACHH,EACE,yBAAKvC,UAAWyC,IAAOE,UACrB,yBAAK3C,UAAWyC,IAAOG,SACvB,yBAAK5C,UAAWyC,IAAOI,UAG3B,MAEF,IAAK,OACHN,EAAc,yBAAKvC,UAAWyC,IAAOK,OACrC,MAEF,IAAK,SACHP,EAAc,yBAAKvC,UAAWyC,IAAOM,SACrC,MAEF,IAAK,QACHR,EAAc,yBAAKvC,UAAWyC,IAAOO,QACrC,MAEF,IAAK,QACHT,EAAc,yBAAKvC,UAAWyC,IAAOQ,QACrC,MACF,QACEV,EAAc,KAGlB,OAAOA,M,GAtCqBF,aCwBjBa,EAxBA,SAACrD,GACd,QAAyBsD,GAArBtD,EAAM0C,YAAyB,CACnC,IAAIa,EAAiBC,OAAOC,KAAKzD,EAAM0C,aACpCgB,KAAI,SAACC,GACJ,OAAO,YAAIC,MAAM5D,EAAM0C,YAAYiB,KAAUD,KAAI,SAACG,EAAGC,GACnD,OAAO,kBAAC,EAAD,CAAmBC,IAAKJ,EAASG,EAASnB,KAAMgB,UAG1DK,QAAO,SAACC,EAAKC,GACZ,OAAOD,EAAIE,OAAOD,KACjB,IAEyB,IAA1BX,EAAea,SACjBb,EAAiB,2DAGnB,OACE,yBAAKpD,UAAWyC,IAAOS,QACrB,kBAAC,EAAD,CAAmBV,KAAK,cACvBY,EACD,kBAAC,EAAD,CAAmBZ,KAAK,mB,kCCtBf,SAAS0B,EAAarE,GACnC,OACE,yBAAKG,UAAWC,IAAQiE,cACtB,yBAAKlE,UAAWC,IAAQkE,OAAQtE,EAAMuE,OACtC,4BAAQpE,UAAWC,IAAQoE,KAAM1D,QAASd,EAAMyE,OAAhD,QAGA,4BACEtE,UAAWC,IAAQsE,KACnB5D,QAASd,EAAM2E,OACfC,SAAU5E,EAAM6E,SAHlB,SCNS,SAASC,EAAc9E,GAQpC,OACE,yBAAKG,UAAWC,IAAQ0E,eACtB,6CACiB,gCAAS9E,EAAM+E,MAAMC,QAAQ,KAVjC,CACf,CAAET,MAAO,QAAS5B,KAAM,SACxB,CAAE4B,MAAO,SAAU5B,KAAM,UACzB,CAAE4B,MAAO,QAAS5B,KAAM,SACxB,CAAE4B,MAAO,OAAQ5B,KAAM,SAQXe,KAAI,SAACuB,GACb,OACE,kBAACZ,EAAD,CACEN,IAAKkB,EAAKV,MACVA,MAAOU,EAAKV,MACZE,MAAO,WACLzE,EAAMkF,cAAcD,EAAKtC,OAE3BgC,OAAQ,WACN3E,EAAMmF,iBAAiBF,EAAKtC,OAE9BkC,QAAS7E,EAAMoF,QAAQH,EAAKtC,WAIlC,4BACExC,UAAWC,IAAQiF,YACnBT,UAAW5E,EAAMsF,YACjBxE,QAASd,EAAMuF,SAHjB,c,sBCZSC,GAfD,SAACxF,GACb,OACE,kBAAC,EAAD,KACE,kBAACoB,EAAD,CAAUC,KAAMrB,EAAMqB,KAAME,cAAevB,EAAMyF,iBACjD,yBACEtF,UAAS,UAAKC,KAAQoF,MAAb,YACPxF,EAAMqB,KAAOjB,KAAQsF,UAAYtF,KAAQuF,YAG1C3F,EAAMC,Y,oBCXA,SAAS2F,GAAO5F,GAC7B,OACE,4BACEG,UAAW,CAACC,KAAQwF,OAAQxF,KAAQJ,EAAM6F,UAAU/D,KAAK,KACzDhB,QAASd,EAAM8F,SAEd9F,EAAMC,UCoBE8F,WAAMC,MAzBrB,SAAsBhG,GACpB,IAAIiG,EAAUzC,OAAOC,KAAKzD,EAAM0C,aAAagB,KAAI,SAACC,GAChD,OACE,wBAAII,IAAKJ,GACP,0BAAMuC,MAAO,CAAEC,cAAe,eAAiBxC,GADjD,IAEG3D,EAAM0C,YAAYiB,OAKzB,OACE,kBAAC,EAAD,KACE,kDACA,4BAAKsC,GACL,sDACA,kBAACL,GAAD,CAAQC,QAAQ,SAASC,QAAS9F,EAAMoG,aAAxC,WAGA,kBAACR,GAAD,CAAQC,QAAQ,UAAUC,QAAS9F,EAAMqG,eAAzC,gB,oBChBSC,GAJGC,KAAMC,OAAO,CAC3BC,QAAU,yC,oBCMCC,GANC,WACZ,OACI,yBAAKvG,UAAaC,KAAQuG,QAA1B,eCyCOC,GA1CY,SAACC,EAAkBN,GAC5C,mNACEvE,MAAQ,CACN8E,MAAO,MAFX,EAwBEC,eAAiB,WACf,EAAK5E,SAAS,CAAE2E,MAAO,QAzB3B,mEAKwB,IAAD,OACnBxE,KAAK0E,OAAST,EAAMU,aAAaC,QAAQC,KAAI,SAACC,GAE5C,OADA,EAAKjF,SAAS,CAAE2E,MAAO,OAChBM,KAGT9E,KAAK+E,OAASd,EAAMU,aAAaK,SAASH,KACxC,SAACI,GAAD,OAASA,KACT,SAACT,GACC,EAAK3E,SAAS,CAAE2E,MAAOA,SAd/B,6CAoBIP,EAAMU,aAAaC,QAAQM,MAAMlF,KAAK0E,QACtCT,EAAMU,aAAaK,SAASE,MAAMlF,KAAK+E,UArB3C,+BA6BI,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,CAAOhG,KAAMiB,KAAKN,MAAM8E,MAAOrB,eAAgBnD,KAAKyE,gBACjDzE,KAAKN,MAAM8E,MAAQxE,KAAKN,MAAM8E,MAAMW,QAAU,MAEjD,kBAACZ,EAAqBvE,KAAKtC,YAlCnC,GAAqBwC,cCgCVkF,GAAe,SAACC,EAAOC,EAAMC,GACxC,OAAO,SAACC,GACNA,EArBK,CACLnF,KCJsB,eDyBtB,IAAMoF,EAAW,CACfJ,MAAOA,EACPK,SAAUJ,EACVK,mBAAmB,GAGjBC,EACF,wGACGL,IACHK,EACE,qHAEJ3B,KACG4B,KAAKD,EAAKH,GACVK,MAAK,SAACd,GA7Ca,IAACe,EA8CnBC,QAAQC,IAAIjB,EAASkB,MACrBV,EAjCmB,SAACC,GAC1B,MAAO,CACLpF,KCTwB,eDUxBoF,SAAUA,GA8BGU,CAAYnB,EAASkB,OAC9BV,GAhDmBO,EAgDCf,EAASkB,KAAKE,UA/CjC,SAACZ,GACNa,YAAW,WACTb,EARG,CACLnF,KCauB,kBDLpB0F,SA8CAO,OAAM,SAACC,GACNP,QAAQC,IAAIM,GACZf,EA/BgB,SAACe,GACvB,MAAO,CACLlG,KCfqB,YDgBrBmE,MAAO+B,GA4BMC,CAASD,EAAIvB,SAASkB,KAAK1B,a,SEhDtCiC,G,4MACJ/G,MAAQ,CACNgH,cAAc,EACdlC,OAAO,G,EA6BTmC,oBAAsB,WACpB,EAAK9G,SAAS,CAAE6G,cAAc,K,EAGhCE,YAAc,WACZ,EAAK/G,SAAS,CAAE6G,cAAc,K,EAGhCG,cAAgB,WACd,EAAKnJ,MAAMoJ,QAAQC,KAAK,CAAEC,SAAU,e,kEA1BpChH,KAAKtC,MAAMuJ,oB,2CAIQ7G,GASnB,OARmBc,OAAOC,KAAKf,GAC5BgB,KAAI,SAACC,GACJ,OAAOjB,EAAYiB,MAEpBK,QAAO,SAACwF,EAAMC,GACb,OAAOD,EAAOC,IACb,GAEe,I,+BAiBpB,IAAMC,EAAW,eACZpH,KAAKtC,MAAM2J,cAEhB,IAAK,IAAM5F,KAAO2F,EAChBA,EAAY3F,GAAO2F,EAAY3F,IAAQ,EAGzC,IAAI6F,EAAe,KACfC,EAASvH,KAAKtC,MAAM8G,MACtB,sDAEA,kBAAC,GAAD,MA8BF,OA3BIxE,KAAKtC,MAAM2J,eACbE,EACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAQnH,YAAaJ,KAAKtC,MAAM2J,eAChC,kBAAC7E,EAAD,CACEI,cAAe5C,KAAKtC,MAAM8J,gBAC1B3E,iBAAkB7C,KAAKtC,MAAM+J,mBAC7B3E,QAASsE,EACT3E,MAAOzC,KAAKtC,MAAMgK,oBAClB1E,YAAahD,KAAK2H,qBAAqB3H,KAAKtC,MAAM2J,cAClDpE,QAASjD,KAAK2G,uBAIpBW,EACE,kBAAC,GAAD,CACElH,YAAaJ,KAAKtC,MAAM2J,aACxBvD,YAAa9D,KAAK4G,YAClB7C,cAAe/D,KAAK6G,iBAUxB,kBAAC,EAAD,KACE,kBAAC,GAAD,CAAO9H,KAAMiB,KAAKN,MAAMgH,aAAcvD,eAAgBnD,KAAK4G,aACxDU,GAEFC,O,GA3FmBrH,aAmHb0H,iBAlBS,SAAClI,GACvB,MAAO,CACL2H,aAAc3H,EAAMmI,cAAczH,YAClCsH,oBAAqBhI,EAAMmI,cAAcC,WACzCC,eAAgBrI,EAAMmI,cAAcrD,UAIb,SAACgB,GAC1B,MAAO,CACLgC,gBAAiB,SAACQ,GAAD,OACfxC,ECtHuB,SAACwC,GAC5B,MAAO,CACL3H,KFL0B,iBEM1B4H,eAAgBD,GDmHLE,CAAmCF,KAC9CP,mBAAoB,SAACO,GAAD,OAClBxC,ECjH0B,SAACwC,GAC/B,MAAO,CACL3H,KFX6B,oBEY7B4H,eAAgBD,GD8GLE,CAAsCF,KACjDf,gBAAiB,kBAAMzB,GC7FlB,SAACA,GACNvB,GACGkE,IAAI,wDACJrC,MAAK,SAACd,GACLQ,EAjBC,CACLnF,KFjB2B,kBEkB3BD,YAe4B4E,EAASkB,UAElCI,OAAM,SAAC9B,GACNgB,EAbC,CACLnF,KFvBoC,uCC6HzBuH,CAGbtD,GAAmBmC,GAAexC,K,4BE9GrBmE,GAjBS,SAAC1K,GACvB,OACE,yBAAKG,UAAWC,KAAQsK,iBACtB,4DACA,yBAAKxE,MAAO,CAAEyE,MAAO,OAAQC,OAAQ,SACnC,kBAAC,EAAD,CAAQlI,YAAa1C,EAAM0C,eAE7B,kBAACkD,GAAD,CAAQC,QAAQ,UAAUC,QAAS9F,EAAM6K,kBAAzC,YAGA,kBAACjF,GAAD,CAAQC,QAAQ,SAASC,QAAS9F,EAAM8K,gBAAxC,Y,wCC0DSC,GArED,SAAC/K,GACb,IAAIgL,EAAe,KACfC,EAAe,CAAC7K,KAAQ8K,cAM5B,OAJIlL,EAAMmL,SAAWnL,EAAMoL,gBAAkBpL,EAAMqL,SACjDJ,EAAa5B,KAAKjJ,KAAQkL,SAGpBtL,EAAMuL,aACZ,IAAK,QACHP,EACE,yCACE7K,UAAW8K,EAAanJ,KAAK,MACzB9B,EAAMwL,cAFZ,CAGEC,MAAOzL,EAAMyL,MACbC,SAAU1L,EAAM2L,WAGpB,MAEF,IAAK,WACHX,EACE,4CACE7K,UAAW8K,EAAanJ,KAAK,MACzB9B,EAAMwL,cAFZ,CAGEC,MAAOzL,EAAMyL,MACbC,SAAU1L,EAAM2L,WAGpB,MAEF,IAAK,SACH,IAAIC,EAAe5L,EAAMwL,cAAcK,QAAQnI,KAAI,SAACuB,GAClD,OACE,4BAAQlB,IAAKkB,EAAKwG,MAAOA,MAAOxG,EAAKwG,OAClCxG,EAAK6G,YAKZd,EACE,4BACE7K,UAAW8K,EAAanJ,KAAK,KAC7BiK,KAAK,WACLL,SAAU1L,EAAM2L,SAEfC,GAGL,MAEF,QACEZ,EACE,yCACE7K,UAAW8K,EAAanJ,KAAK,MACzB9B,EAAMwL,cAFZ,CAGEC,MAAOzL,EAAMyL,SAKrB,OACE,6BACE,2BAAOtL,UAAWC,KAAQkE,OAAQtE,EAAMuE,MAAMyH,eAC7ChB,ICzDDiB,G,4MACJjK,MAAQ,CACNkK,UAAW,CACTH,KAAM,CACJR,YAAa,QACbC,cAAe,CACbW,YAAa,YACbxJ,KAAM,QAER8I,MAAO,GACPW,WAAY,CACVC,SAAS,EACTjB,gBAAgB,EAChBC,SAAS,EACTiB,MAAO,CACLC,UAAU,KAIhB5E,MAAO,CACL4D,YAAa,QACbC,cAAe,CACbW,YAAa,aACbxJ,KAAM,SAER8I,MAAO,GACPW,WAAY,CACVC,SAAS,EACTjB,gBAAgB,EAChBC,SAAS,EACTiB,MAAO,CACLC,UAAU,KAIhBC,KAAM,CACJjB,YAAa,QACbC,cAAe,CACbW,YAAa,YACbxJ,KAAM,QAER8I,MAAO,GACPW,WAAY,CACVC,SAAS,EACTjB,gBAAgB,EAChBC,SAAS,EACTiB,MAAO,CACLC,UAAU,KAIhBE,WAAY,CACVlB,YAAa,QACbC,cAAe,CACbW,YAAa,WACbxJ,KAAM,UAER8I,MAAO,GACPW,WAAY,CACVC,SAAS,EACTjB,gBAAgB,EAChBC,SAAS,EACTiB,MAAO,CACLC,UAAU,EACVG,UAAW,EACXC,UAAW,KAKjBC,SAAU,CACRrB,YAAa,SACbC,cAAe,CACbK,QAAS,CACP,CAAEJ,MAAO,UAAWK,QAAS,WAC7B,CAAEL,MAAO,WAAYK,QAAS,cAGlCM,WAAY,CACVhB,gBAAgB,EAChBkB,MAAO,CACLC,UAAU,IAGdd,MAAO,KAGXoB,kBAAkB,EAClBC,mBAAmB,G,EAGrBC,gBAAkB,SAACtB,EAAOa,GACxB,IAAIU,GAAW,EAUf,OARIV,EAAMC,WACRS,EAA4B,KAAjBvB,EAAMwB,QAEfX,EAAMI,WAAaJ,EAAMK,YAC3BK,EACEvB,EAAMrH,QAAUkI,EAAMI,WAAajB,EAAMrH,QAAUkI,EAAMK,WAGtDK,G,EAITE,gBAAkB,SAACC,EAAOC,GAExB,IAoBIC,EApBAnB,EAAS,eAAQ,EAAKlK,MAAMkK,WAE5BoB,EAAiB,eAAQpB,EAAUkB,IAEvCE,EAAkB7B,MAAQ0B,EAAMI,OAAO9B,MAEvC6B,EAAkBlB,WAAWC,QAAU,EAAKU,gBAC1CO,EAAkB7B,MAClB6B,EAAkBlB,WAAWE,OAI/BgB,EAAkBlB,WAAWf,SAAU,EAEvCa,EAAUkB,GAAcE,EAOxB,IAAIrJ,EAAM,GACV,IAAK,IAAIgB,KAAQiH,EACXA,EAAUjH,GAAMmH,WAAWhB,gBAC7BnH,EAAIoF,KAAK6C,EAAUjH,GAAMmH,WAAWC,QAAQmB,YAE9CH,GAAuBpJ,EAAIwJ,SAAS,SAGtC,EAAKtL,SAAS,CACZ+J,UAAWA,EACXW,iBAAkBQ,K,EAItBK,WAAa,SAACC,GAIZ,GAFAA,EAAEC,iBAEE,EAAK5L,MAAM6K,iBAAkB,CAK/B,IAAMgB,EAAW,GACjB,IAAK,IAAM5I,KAAQ,EAAKjD,MAAMkK,UAC5B2B,EAAS5I,GAAQ,EAAKjD,MAAMkK,UAAUjH,GAAMwG,MAG9C,IAAMqC,EAAQ,CACZC,WAAY,EAAK/N,MAAM2J,aACvB5E,MAAO,EAAK/E,MAAMgK,oBAClBgE,YAAaH,GAGf,EAAK7N,MAAMiO,eAAeH,QAE1B,EAAK3L,SAAS,CAAE2K,mBAAmB,K,uDAI7B,IAAD,OACHxK,KAAKtC,MAAMkO,UACb5L,KAAKtC,MAAMoJ,QAAQC,KAAK,mBAI1B,IAAI8E,EAAe,GACnB,IAAK,IAAMC,KAAU9L,KAAKN,MAAMkK,UAC9BiC,EAAa9E,KAAK,CAChBgF,GAAID,EACJE,OAAQhM,KAAKN,MAAMkK,UAAUkC,KAIjC,IAAMG,EAAaJ,EAAazK,KAAK,SAAAuB,GACnC,OACE,kBAAC,GAAD,CACElB,IAAKkB,EAAKoJ,GACV9J,MAAOU,EAAKoJ,GACZ9C,YAAatG,EAAKqJ,OAAO/C,YACzBC,cAAevG,EAAKqJ,OAAO9C,cAC3BC,MAAOxG,EAAKqJ,OAAO7C,MACnBL,eAAgBnG,EAAKqJ,OAAOlC,WAAWhB,eACvCD,SAAUlG,EAAKqJ,OAAOlC,WAAWC,QACjChB,QAASpG,EAAKqJ,OAAOlC,WAAWf,QAChCM,QAAS,SAACgC,GACR,EAAKT,gBAAgBS,EAAG1I,EAAKoJ,UAMrC,OACE,kBAAC,EAAD,KACG/L,KAAKtC,MAAMwO,QACV,kBAAC,GAAD,MAEA,yBAAKrO,UAAWC,KAAQ6L,aACrB3J,KAAKN,MAAM8K,kBACV,wBAAI5G,MAAO,CAAEuI,OAAQ,gBAAiBC,MAAO,QAA7C,2BAGE,KACJ,0BAAMC,SAAUrM,KAAKoL,YAClBa,EACD,6BACE,kBAAC3I,GAAD,CAAQC,QAAQ,WAAhB,yB,GAvNUrD,aAiPX0H,iBAhBS,SAAClI,GACvB,MAAO,CACL2H,aAAc3H,EAAMmI,cAAczH,YAClCsH,oBAAqBhI,EAAMmI,cAAcC,WACzCoE,QAASxM,EAAM4M,OAAOJ,QACtBN,SAAUlM,EAAM4M,OAAOV,aAIA,SAACpG,GAC1B,MAAO,CACLmG,eAAgB,SAACH,GAAD,OAAWhG,GClNJ+G,EDkNqCf,ECjNvD,SAAChG,GACNA,EAtBK,CACLnF,KNZgC,yBMmChC4D,GACG4B,KAAK,eAAgB0G,GACrBzG,MAAK,SAACd,GACLQ,EArBC,CACLnF,KNjB+B,sBMkB/BmM,QAmB+BxH,EAASkB,KAAKuD,KAlB7CgD,UAkBmDF,IAC/C/G,EAxCC,CACLnF,KNGoB,aMqChBmF,EAnCC,CACLnF,KNFwB,oBMsCrBiG,OAAM,SAAC9B,GACNgB,EAnBsB,SAAChB,GAC7B,MAAO,CACLnE,KNxB4B,mBMyB5BmE,MAAOA,GAgBMkI,CAAelI,UAZN,IAAC+H,MDuNZ3E,CAGb+E,aAAWhD,KExPPiD,G,4MACJC,wBAA0B,WACxB,EAAKnP,MAAMoJ,QAAQgG,QAAQ,2B,EAI7BC,sBAAwB,WACtB,EAAKrP,MAAMoJ,QAAQkG,U,uDAInB,OACE,6BACE,kBAAC,GAAD,CACE5M,YAAaJ,KAAKtC,MAAM2J,aACxBmB,eAAgBxI,KAAK+M,sBACrBxE,iBAAkBvI,KAAK6M,0BAKzB,kBAAC,KAAD,CACEI,KAAMjN,KAAKtC,MAAMwP,MAAMD,KAAO,gBAC9BE,UAAWxD,U,GAvBEzJ,aAoCR0H,iBANS,SAAClI,GACvB,MAAO,CACL2H,aAAc3H,EAAMmI,cAAczH,YAClCsH,oBAAqBhI,EAAMmI,cAAcC,cAG9BF,CAAyBgF,I,oBCPzBQ,GAhCD,SAAC1P,GACb,IAAM0C,EAAc,GAIpB,IAAK,IAAIqB,KAAO/D,EAAM0C,YACpBA,EAAY2G,KAAK,CACfkB,eAAgBxG,EAChB4L,SAAU3P,EAAM0C,YAAYqB,KAIhC,IAAM6L,EAAoBlN,EAAYgB,KAAI,SAACuB,GACzC,OACE,0BACA9E,UAAaC,KAAQyP,KACrB9L,IAAKkB,EAAKsF,gBACPtF,EAAKsF,eAHR,KAG0BtF,EAAK0K,SAH/B,QAQJ,OACE,yBAAKxP,UAAWC,KAAQsP,OACtB,2CAAiBE,GACjB,qCACS,gCAAS5P,EAAM+E,UCrBxB+K,G,kLAKFxN,KAAKtC,MAAM+P,sB,+BAIX,IAAInB,EAAS,kBAAC,GAAD,MAYb,OAXKtM,KAAKtC,MAAMwO,UACdI,EAAStM,KAAKtC,MAAMgQ,cAActM,KAAI,SAACuB,GACrC,OACE,kBAAC,GAAD,CACEvC,YAAauC,EAAK8I,WAClBhJ,MAAOE,EAAKF,MACZhB,IAAKkB,EAAKoJ,SAKX,oCAAGO,O,GArBOpM,aAwCN0H,iBAfS,SAAClI,GACvB,MAAO,CACLgO,cAAehO,EAAM4M,OAAOA,OAC5BJ,QAASxM,EAAM4M,OAAOJ,YAIC,SAAC1G,GAC1B,MAAO,CACLiI,kBAAmB,WACjBjI,GH+BG,SAACA,GACNA,EArBK,CACLnF,KN5CiC,0BMiEjC4D,GACGkE,IAAI,gBACJrC,MAAK,SAACb,GACL,IAAMyI,EAAgB,GAEtB,IAAK,IAAMjM,KAAOwD,EAAIiB,KACpBwH,EAAc3G,KAAd,2BAAwB9B,EAAIiB,KAAKzE,IAAjC,IAAuCsK,GAAItK,KAE7C+D,EAxBC,CACLnF,KNjDgC,uBMkDhCiM,OAsB+BoB,OAE5BpH,OAAM,SAACC,GACNf,EApBC,CACLnF,KNvD6B,oBMwD7BmE,MAkB8B+B,cGvCnBqB,CAGbtD,GAAmBkJ,GAAQvJ,K,oBC3CvB0J,G,4MACJjO,MAAQ,CACNkO,SAAU,CACRvI,MAAO,CACL4D,YAAa,QACbC,cAAe,CACbW,YAAa,aACbxJ,KAAM,SAER8I,MAAO,GACPW,WAAY,CACVC,SAAS,EACTjB,gBAAgB,EAChBC,SAAS,EACTiB,MAAO,CACLC,UAAU,KAIhBvE,SAAU,CACRuD,YAAa,QACbC,cAAe,CACbW,YAAa,gBACbxJ,KAAM,YAER8I,MAAO,GACPW,WAAY,CACVC,SAAS,EACTjB,gBAAgB,EAChBC,SAAS,EACTiB,MAAO,CACLC,UAAU,EACVG,UAAW,EACXC,UAAW,OAKnBwD,kBAAkB,EAClBC,oBAAoB,EACpBvI,UAAU,G,EAGZkF,gBAAkB,SAACtB,EAAOa,GACxB,IAAIU,GAAW,EAUf,OARIV,EAAMC,WACRS,EAA4B,KAAjBvB,EAAMwB,QAEfX,EAAMI,WAAaJ,EAAMK,YAC3BK,EACEvB,EAAMrH,QAAUkI,EAAMI,WAAajB,EAAMrH,QAAUkI,EAAMK,WAGtDK,G,EAGTE,gBAAkB,SAACC,EAAOC,GAExB,IAwBIiD,EAxBAH,EAAQ,eAAQ,EAAKlO,MAAMkO,UAG3BI,EAAgB,eAAQJ,EAAS9C,IAGrCkD,EAAiB7E,MAAQ0B,EAAMI,OAAO9B,MAGtC6E,EAAiBlE,WAAWC,QAAU,EAAKU,gBACzCuD,EAAiB7E,MACjB6E,EAAiBlE,WAAWE,OAI9BgE,EAAiBlE,WAAWf,SAAU,EAGtC6E,EAAS9C,GAAckD,EAOvB,IAAIrM,EAAM,GACV,IAAK,IAAIgB,KAAQiL,EACXA,EAASjL,GAAMmH,WAAWhB,gBAC5BnH,EAAIoF,KAAK6G,EAASjL,GAAMmH,WAAWC,QAAQmB,YAE7C6C,GAAwBpM,EAAIwJ,SAAS,SAIvC,EAAKtL,SAAS,CACZ+N,SAAUA,EACVC,iBAAkBE,K,EAItBE,gBAAkB,SAAC5C,GACjBA,EAAEC,iBACF,EAAK5N,MAAMwQ,OACT,EAAKxO,MAAMkO,SAASvI,MAAM8D,MAC1B,EAAKzJ,MAAMkO,SAASlI,SAASyD,MAC7B,EAAKzJ,MAAM6F,W,EAIf4I,cAAgB,WACd,EAAKtO,UAAS,SAACuO,GACb,MAAO,CACL7I,UAAW6I,EAAU7I,c,uDAKjB,IAAD,OAGH8I,EAAa,GACjB,IAAK,IAAMvC,KAAU9L,KAAKN,MAAMkO,SAC9BS,EAAWtH,KAAK,CACdgF,GAAID,EACJE,OAAQhM,KAAKN,MAAMkO,SAAS9B,KAIhC,IAAMG,EAAaoC,EAAWjN,KAAI,SAACuB,GACjC,OACE,kBAAC,GAAD,CACElB,IAAKkB,EAAKoJ,GACV9J,MAAOU,EAAKoJ,GACZ9C,YAAatG,EAAKqJ,OAAO/C,YACzBC,cAAevG,EAAKqJ,OAAO9C,cAC3BC,MAAOxG,EAAKqJ,OAAO7C,MACnBL,eAAgBnG,EAAKqJ,OAAOlC,WAAWhB,eACvCD,SAAUlG,EAAKqJ,OAAOlC,WAAWC,QACjChB,QAASpG,EAAKqJ,OAAOlC,WAAWf,QAChCM,QAAS,SAACgC,GACR,EAAKT,gBAAgBS,EAAG1I,EAAKoJ,UAMjCuC,EAAe,KAKnB,OAJItO,KAAKtC,MAAM8G,QACb8J,EAAe,uBAAG1K,MAAO,CAAEwI,MAAO,QAAUpM,KAAKtC,MAAM8G,MAAMW,UAI7D,yBAAKtH,UAAWC,KAAQ6P,MACrBW,EACD,0BAAMjC,SAAUrM,KAAKiO,iBAClBjO,KAAKtC,MAAMwO,QAAU,kBAAC,GAAD,MAAcD,EAEpC,kBAAC3I,GAAD,CAAQC,QAAQ,WAAhB,WAEF,kBAACD,GAAD,CAAQE,QAASxD,KAAKmO,cAAe5K,QAAQ,UAA7C,aACavD,KAAKN,MAAM6F,SAAW,UAAY,gB,GA/JpCrF,aAoLJ0H,iBAdS,SAAClI,GACvB,MAAO,CACLwM,QAASxM,EAAM6O,eAAerC,QAC9B1H,MAAO9E,EAAM6O,eAAe/J,UAIL,SAACgB,GAC1B,MAAO,CACL0I,OAAQ,SAAC7I,EAAOC,EAAMC,GAAd,OACNC,EAASgJ,GAAyBnJ,EAAOC,EAAMC,QAItCqC,CAA6C+F,ICrK7Cc,G,uKAbX,OACE,kBAAC,EAAD,KAEE,kBAAC,KAAD,CAAOC,OAAK,EAACzB,KAAK,kBAAkBE,UAAa1G,KACjD,kBAAC,KAAD,CAAOwG,KAAO,YAAYE,UAAaP,KACvC,kBAAC,KAAD,CAAOK,KAAO,UAAUE,UAAaK,KACrC,kBAAC,KAAD,CAAOP,KAAO,QAAQE,UAAaQ,U,GARzBzN,a,kBCPZyO,GAAqB,CACzBC,OAAQ,EACRC,MAAO,EACPC,KAAM,EACNC,MAAO,GAGHC,GAAe,CACnB5O,YAAa,KACboE,OAAO,EACPsD,WAAY,GA+CCmH,GA3CC,WAAmC,IAAlCvP,EAAiC,uDAAzBsP,GAAcE,EAAW,uCAChD,OAAQA,EAAO7O,MACb,IZjB0B,iBYkBxB,OAAO,2BACFX,GADL,IAEEU,YAAY,2BACPV,EAAMU,aADA,mBAER8O,EAAOjH,eAAiBvI,EAAMU,YAAY8O,EAAOjH,gBAAkB,IAEtEH,WACEpI,EAAMoI,WAAa6G,GAAmBO,EAAOjH,kBAEnD,IZ1B6B,oBY2B3B,OAAO,2BACFvI,GADL,IAEEU,YAAY,2BACPV,EAAMU,aADA,mBAER8O,EAAOjH,eAAiBvI,EAAMU,YAAY8O,EAAOjH,gBAAkB,IAEtEH,WACEpI,EAAMoI,WAAa6G,GAAmBO,EAAOjH,kBAGnD,IZpC2B,kBYqCzB,OAAO,2BACFvI,GADL,IAEEU,YAAa8O,EAAO9O,YACpBoE,OAAO,EACPsD,WAAY,IAGhB,IZ3CoC,2BY4ClC,OAAO,2BACFpI,GADL,IAEE8E,OAAO,IAEX,QACE,OAAO,eACF9E,KCnDLsP,GAAe,CACnB1C,OAAQ,GACRJ,SAAS,EACTN,UAAU,EACVpH,MAAO,MAgEMyK,GA7DC,WAAmC,IAAlCvP,EAAiC,uDAAzBsP,GAAcE,EAAW,uCAChD,OAAQA,EAAO7O,MACb,IbHoB,WaIlB,OAAO,2BACFX,GADL,IAEEkM,UAAU,IAGd,IbRwB,eaStB,OAAO,2BACFlM,GADL,IAEEkM,UAAU,IAGd,IblBgC,uBamB9B,OAAO,2BACFlM,GADL,IAEEwM,SAAS,IAEb,IbtB+B,sBauB7B,IAAMiD,EAAQ,2BACTD,EAAOzC,WADE,IAEZV,GAAImD,EAAO1C,UAEb,OAAO,2BACF9M,GADL,IAEEwM,SAAS,EACTI,OAAQ5M,EAAM4M,OAAOzK,OAAOsN,KAEhC,Ib/B4B,mBagC1B,OAAO,2BACFzP,GADL,IAEEwM,SAAS,EACT1H,MAAO0K,EAAO1K,QAGlB,IblCiC,wBamC/B,OAAO,2BACF9E,GADL,IAEEwM,SAAS,IAGb,IbvCgC,uBawC9B,OAAO,2BACFxM,GADL,IAEEwM,SAAS,EACTI,OAAQ4C,EAAO5C,SAGnB,Ib7C6B,oBa8C3B,OAAO,2BACF5M,GADL,IAEEwM,SAAS,EACT1H,MAAO0K,EAAO1K,QAGlB,QACE,OAAO9E,IChEPsP,GAAe,CACnBI,QAAS,KACTC,QAAS,KACTnD,QAAS,KACT1H,MAAO,MAkCMyK,GA/BC,WAAmC,IAAlCvP,EAAiC,uDAAzBsP,GAAcE,EAAW,uCAChD,OAAQA,EAAO7O,MACb,IdIsB,acHpB,OAAO,2BACFX,GADL,IAEEwM,SAAS,IAEb,IdAwB,ecCtB,OAAO,2BACFxM,GADL,IAEE0P,QAASF,EAAOzJ,SAAS2J,QACzBC,QAASH,EAAOzJ,SAAS4J,QACzBnD,SAAS,IAEb,IdNqB,YcOnB,OAAO,2BACFxM,GADL,IAEEwM,SAAS,EACT1H,MAAO0K,EAAO1K,QAElB,IdXuB,ccYrB,OAAO,2BACF9E,GADL,IAEE0P,QAAS,KACTC,QAAS,OAEb,QACE,OAAO3P,I,SCxBP4P,GAAmBC,OAAOC,sCAAwCC,KAGlEC,GAAcC,aAAgB,CAClC9H,cAAe+H,GACftD,OAAQuD,GACRtB,eAAgBuB,KAGZC,GAAQC,aACZN,GACAJ,GAAiBW,aAAgBC,QAI7BC,GACJ,kBAAC,KAAD,CAAUJ,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,GAAD,QAKNK,IAASC,OAAOF,GAAKG,SAASC,eAAe,W","file":"static/js/main.0cf210fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"burger_ingredients_BreadBottom__1v6Tg\",\"BreadTop\":\"burger_ingredients_BreadTop__3mt-8\",\"Seeds1\":\"burger_ingredients_Seeds1__20q4W\",\"Seeds2\":\"burger_ingredients_Seeds2__3d7KW\",\"Meat\":\"burger_ingredients_Meat__1Wkhd\",\"Cheese\":\"burger_ingredients_Cheese__2EqLk\",\"Salad\":\"burger_ingredients_Salad__2YC98\",\"Bacon\":\"burger_ingredients_Bacon__2DTi1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"side_drawer_SideDrawer__Pm93F\",\"Open\":\"side_drawer_Open__1hy0C\",\"Close\":\"side_drawer_Close__2s0jR\",\"Logo\":\"side_drawer_Logo__38E9I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"build_control_BuildControl__f2SOZ\",\"Label\":\"build_control_Label__1uhKi\",\"Less\":\"build_control_Less__3dO3U\",\"More\":\"build_control_More__1qQlP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"toolbar_Toolbar__6xqBH\",\"Logo\":\"toolbar_Logo__2QogE\",\"DesktopOnly\":\"toolbar_DesktopOnly__23-bG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"modal_Modal__1zgTe\",\"showModal\":\"modal_showModal__gmHsh\",\"hideModal\":\"modal_hideModal__2mD4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"input_Input__dNO7g\",\"Label\":\"input_Label__mCIfG\",\"InputElement\":\"input_InputElement__3MXpe\",\"Invalid\":\"input_Invalid__t6qv8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"navitem_NavigationItem__il4Xk\",\"active\":\"navitem_active__1WS3z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"build_controls_BuildControls__3Dc2d\",\"OrderButton\":\"build_controls_OrderButton__22fnG\",\"enable\":\"build_controls_enable__1b-F8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"button_Button__2uX61\",\"Success\":\"button_Success__R5wR_\",\"Danger\":\"button_Danger__2R0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"order_Order__1Qy15\",\"span\":\"order_span__mX4wy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"layout_content__ragF6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"logo_Logo__146Z2\"};","module.exports = __webpack_public_path__ + \"static/media/logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"navitems_NavigationItems__3SqwF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"menu_DrawerToggle__30Mga\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"backdrop_backdrop__1Zvs5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"burger_Burger__20nQK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"spinner_Loader__nxN9Q\",\"load1\":\"spinner_load1__277ro\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__1TzNM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"contatc-form_ContactForm__1PaLW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"auth_Auth__3s7TE\",\"ContactForm\":\"auth_ContactForm__105sF\"};","// we create this compoent right now to just pass our cjild component in it \r\n//to write adjacent jsx \r\nconst Aux = (props) => props.children;\r\nexport default Aux;","import React from \"react\";\r\nimport classes from \"./logo.module.css\";\r\nimport logo from \"../../assets/images/logo.png\";\r\n\r\nexport default function Logo() {\r\n  return (\r\n    <div className={classes.Logo}>\r\n      <img src={logo} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./navitem.module.css\";\r\n\r\nconst NavigationItem = (props) => {\r\n  return (\r\n    <li className={classes.NavigationItem}>\r\n      <NavLink activeClassName={classes.active} to={props.link}>\r\n        {props.children}\r\n      </NavLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default NavigationItem;\r\n","import React from \"react\";\r\nimport classes from \"./navitems.module.css\";\r\nimport NavigationItem from './Navigation Item/navigation_item'\r\n\r\nexport default function NavigationItems() {\r\n  return (\r\n    \r\n      <ul className = {classes.NavigationItems}>\r\n          <NavigationItem link= '/burger_builder'>BURGER</NavigationItem>\r\n          <NavigationItem link = '/orders'>ORDERS</NavigationItem>\r\n          <NavigationItem link = '/auth'>Authenticate</NavigationItem>\r\n      </ul>\r\n\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./menu.module.css\";\r\n\r\nexport default function Menu(props) {\r\n  return (\r\n    <div onClick={props.openClose} className = {classes.DrawerToggle}>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./toolbar.module.css\";\r\nimport Logo from \"../../Logo/logo\";\r\nimport NavigationItems from \"../Navigation Items/navigation_items\";\r\nimport Menu from \"../Side Drawer/Menu/menu\";\r\n\r\nexport default function Toolbar(props) {\r\n  return (\r\n    <div>\r\n      <header className={classes.Toolbar}>\r\n        <Menu openClose={props.menuHandler} />\r\n        <div className={classes.Logo}>\r\n          <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n          <NavigationItems />\r\n        </nav>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./backdrop.module.css\";\r\n\r\nexport default function Backdrop(props) {\r\n  return props.show ? (\r\n    <div className={classes.backdrop} onClick={props.closebackdrop}></div>\r\n  ) : null;\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./side_drawer.module.css\";\r\nimport Logo from \"../../Logo/logo\";\r\nimport NavigationItems from \"../Navigation Items/navigation_items\";\r\nimport Backdrop from \"../../UI/Backdrop/backdrop\";\r\nimport Aux from \"../../../hoc/auxiliary\";\r\n\r\nexport default function SideDrawer(props) {\r\n  let condiitonalClasses = [classes.SideDrawer, classes.Close];\r\n  if (props.open) {\r\n    condiitonalClasses = [classes.SideDrawer, classes.Open];\r\n  }\r\n  return (\r\n    <Aux>\r\n      <Backdrop show={props.open} closebackdrop={props.closed} />\r\n      <header className={condiitonalClasses.join(\" \")}>\r\n        <div className={classes.Logo}>\r\n          <Logo />\r\n        </div>\r\n        <nav>\r\n          <NavigationItems />\r\n        </nav>\r\n      </header>\r\n    </Aux>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./layout.module.css\";\r\nimport Aux from \"../auxiliary\";\r\nimport Toolbar from \"../../components/Navigation/Toolbar/toolbar\";\r\nimport SideDrawer from \"../../components/Navigation/Side Drawer/side_drawer\";\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    sideDrawerState: false,\r\n  };\r\n\r\n  sideDrawerCloseHandler = () => {\r\n    this.setState({ sideDrawerState: false });\r\n  };\r\n\r\n  sideDrawerMenuHandler = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        sideDrawerState: !prevState.sideDrawerState,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <SideDrawer\r\n          \r\n          open={this.state.sideDrawerState}\r\n          closed={this.sideDrawerCloseHandler}\r\n        />\r\n        <Toolbar menuHandler={this.sideDrawerMenuHandler} />\r\n\r\n        <main className={classes.content}>{this.props.children}</main>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./burger_ingredients.module.css\";\r\n\r\n\r\nclass BurgerIngredients extends Component {\r\n\r\n  \r\n  render() {\r\n    let ingredients = null;\r\n\r\n    switch (this.props.type) {\r\n      case \"bread-bottom\":\r\n        ingredients = <div className={styles.BreadBottom}></div>;\r\n        break;\r\n      case \"bread-top\":\r\n        ingredients = (\r\n          <div className={styles.BreadTop}>\r\n            <div className={styles.Seeds1}></div>\r\n            <div className={styles.Seeds2}></div>\r\n          </div>\r\n        );\r\n        break;\r\n\r\n      case \"meat\":\r\n        ingredients = <div className={styles.Meat}></div>;\r\n        break;\r\n\r\n      case \"cheese\":\r\n        ingredients = <div className={styles.Cheese}></div>;\r\n        break;\r\n\r\n      case \"salad\":\r\n        ingredients = <div className={styles.Salad}></div>;\r\n        break;\r\n\r\n      case \"bacon\":\r\n        ingredients = <div className={styles.Bacon}></div>;\r\n        break;\r\n      default:\r\n        ingredients = null;\r\n    }\r\n\r\n    return ingredients;\r\n  }\r\n}\r\n//this is prop-type checking using prop-type package.\r\nBurgerIngredients.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default BurgerIngredients;\r\n","import React from \"react\";\r\nimport styles from \"./burger.module.css\";\r\nimport BurgerIngredients from \"./Burger Ingredients/burger_ingredients\";\r\n\r\n\r\nconst Burger = (props) => {\r\n  if (props.ingredients != undefined){\r\n  var transformedIng = Object.keys(props.ingredients)\r\n    .map((igKeys) => {\r\n      return [...Array(props.ingredients[igKeys])].map((_, igIndex) => {\r\n        return <BurgerIngredients key={igKeys + igIndex} type={igKeys} />;\r\n      });\r\n    })\r\n    .reduce((arr, el) => {\r\n      return arr.concat(el);\r\n    }, []);\r\n  \r\n  if (transformedIng.length === 0) {\r\n    transformedIng = <p>Please add some ingredients</p>;\r\n  }\r\n  }\r\n  return (\r\n    <div className={styles.Burger}>\r\n      <BurgerIngredients type=\"bread-top\" />\r\n      {transformedIng}\r\n      <BurgerIngredients type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\nexport default Burger;\r\n","import React from \"react\";\r\nimport classes from \"./build_control.module.css\";\r\n\r\nexport default function BuildControl(props) {\r\n  return (\r\n    <div className={classes.BuildControl}>\r\n      <div className={classes.Label}>{props.label}</div>\r\n      <button className={classes.More} onClick={props.added}>\r\n        More\r\n      </button>\r\n      <button\r\n        className={classes.Less}\r\n        onClick={props.remove}\r\n        disabled={props.disInfo}\r\n      >\r\n        Less\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./build_controls.module.css\";\r\nimport BuildControl from \"./BuildControl/build_control\";\r\n\r\nexport default function BuildControls(props) {\r\n  const controls = [\r\n    { label: \"Salad\", type: \"salad\" },\r\n    { label: \"Cheese\", type: \"cheese\" },\r\n    { label: \"Bacon\", type: \"bacon\" },\r\n    { label: \"Meat\", type: \"meat\" },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.BuildControls}>\r\n      <p>\r\n        Current Price: <strong>{props.price.toFixed(2)}</strong>\r\n      </p>\r\n      {controls.map((item) => {\r\n        return (\r\n          <BuildControl\r\n            key={item.label}\r\n            label={item.label}\r\n            added={() => {\r\n              props.addIngredient(item.type);\r\n            }}\r\n            remove={() => {\r\n              props.removeIngredient(item.type);\r\n            }}\r\n            disInfo={props.disable[item.type]}\r\n          />\r\n        );\r\n      })}\r\n      <button\r\n        className={classes.OrderButton}\r\n        disabled={!props.purchasable}\r\n        onClick={props.ordered}\r\n      >\r\n        ORDER NOW\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./modal.module.css\";\r\nimport Backdrop from \"../Backdrop/backdrop\";\r\nimport Aux from \"../../../hoc/auxiliary\";\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <Aux>\r\n      <Backdrop show={props.show} closebackdrop={props.removebackdrop} />\r\n      <div\r\n        className={`${classes.Modal} ${\r\n          props.show ? classes.showModal : classes.hideModal\r\n        }`}\r\n      >\r\n        {props.children}\r\n      </div>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport classes from \"./button.module.css\";\r\n\r\nexport default function Button(props) {\r\n  return (\r\n    <button\r\n      className={[classes.Button, classes[props.btntype]].join(\" \")}\r\n      onClick={props.clicked}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Aux from \"../../../hoc/auxiliary\";\r\nimport Button from \"../../UI/Button/button\";\r\n\r\nfunction OrderSummary(props) {\r\n  let ingList = Object.keys(props.ingredients).map((igKeys) => {\r\n    return (\r\n      <li key={igKeys}>\r\n        <span style={{ textTransform: \"capitalize\" }}>{igKeys}</span>:\r\n        {props.ingredients[igKeys]}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Aux>\r\n      <h1>Your Order Summary</h1>\r\n      <ul>{ingList}</ul>\r\n      <p>Do you want to checkout</p>\r\n      <Button btntype=\"Danger\" clicked={props.cancleorder}>\r\n        DISMISS\r\n      </Button>\r\n      <Button btntype=\"Success\" clicked={props.continueorder}>\r\n        CONTINUE\r\n      </Button>\r\n    </Aux>\r\n  );\r\n}\r\n\r\nexport default React.memo(OrderSummary);\r\n","import axios from 'axios'\r\n\r\nconst instance  = axios.create({\r\n    baseURL : 'https://itsburgerapp.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from 'react'\r\nimport classes from './spinner.module.css'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className = {classes.Loader}>Loading...</div>\r\n    )\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport Modal from \"../../components/UI/Modal/modal\";\r\nimport Aux from \"../auxiliary\";\r\n\r\nconst globalErrorHandler = (WrappedComponent, axios) => {\r\n  return class extends Component {\r\n    state = {\r\n      error: null,\r\n    };\r\n\r\n    componentWillMount() {\r\n      this.reqint = axios.interceptors.request.use((req) => {\r\n        this.setState({ error: null });\r\n        return req;\r\n      });\r\n\r\n      this.resint = axios.interceptors.response.use(\r\n        (res) => res,\r\n        (error) => {\r\n          this.setState({ error: error });\r\n        }\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      axios.interceptors.request.eject(this.reqint);\r\n      axios.interceptors.response.eject(this.resint);\r\n    }\r\n\r\n    errorConfirmed = () => {\r\n      this.setState({ error: null });\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <Aux>\r\n          <Modal show={this.state.error} removebackdrop={this.errorConfirmed}>\r\n            {this.state.error ? this.state.error.message : null}\r\n          </Modal>\r\n          <WrappedComponent {...this.props} />\r\n        </Aux>\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\nexport default globalErrorHandler;\r\n","import axios from \"axios\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport const logout = () => {\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT,\r\n  };\r\n};\r\n\r\nexport const authLogout = (expirationTime) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, expirationTime);\r\n  };\r\n};\r\n\r\nexport const authStart = () => {\r\n  return {\r\n    type: actionTypes.AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccess = (authData) => {\r\n  return {\r\n    type: actionTypes.AUTH_SUCCESS,\r\n    authData: authData,\r\n  };\r\n};\r\n\r\nexport const authFail = (err) => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: err,\r\n  };\r\n};\r\n\r\nexport const authenticate = (email, pass, isSignUp) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n    const authData = {\r\n      email: email,\r\n      password: pass,\r\n      returnSecureToken: true,\r\n    };\r\n\r\n    let url =\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBy4c6DaAfhkiDB6TP06-rFyhScM1LuZek\";\r\n    if (!isSignUp) {\r\n      url =\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBy4c6DaAfhkiDB6TP06-rFyhScM1LuZek\";\r\n    }\r\n    axios\r\n      .post(url, authData)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        dispatch(authSuccess(response.data));\r\n        dispatch(authLogout(response.data.expiresIn));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        dispatch(authFail(err.response.data.error));\r\n      });\r\n  };\r\n};\r\n","export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\r\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\r\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\r\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\";\r\n\r\nexport const START_TO_PLACE_ORDER = \"START_TO_PLACE_ORDER\";\r\nexport const PLACE_ORDER_SUCCESS = \"PLACE_ORDER_SUCCESS\";\r\nexport const PLACE_ORDER_FAIL = \"PLACE_ORDER_FAIL\";\r\nexport const REDIRECT = \"REDIRECT\";\r\nexport const NOT_REDIRECT = \"NOT_REDIRECT\";\r\n\r\nexport const START_TO_FETCH_ORDERS = \"START_TO_FETCH_ORDERS\";\r\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\r\nexport const FETCH_ORDERS_FAIL = \"FETCH_ORDERS_FAIL\";\r\n\r\nexport const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../hoc/auxiliary\";\r\nimport Burger from \"../../components/Burger/burger\";\r\nimport BuildControls from \"../../components/Burger/Build Controls/build_controls\";\r\nimport Modal from \"../../components/UI/Modal/modal\";\r\nimport OrderSummary from \"../../components/Burger/Order Summary/order_summary\";\r\nimport axios from \"../../axios-order\";\r\nimport Spinner from \"../../components/UI/Spinner/spinner\";\r\nimport globalErrorHandler from \"../../hoc/GlobalErrorHandler/globalErrorHandler\";\r\n//import Checkout from \"./Checkout/checkout\";\r\nimport * as burgerBuilderActions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    OrderClicked: false,\r\n    error: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    // axios\r\n    //   .get(\"https://itsburgerapp.firebaseio.com/ingredients.json\")\r\n    //   .then((response) => {\r\n    //     this.setState({ ingredients: response.data });\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     this.setState({ error: true });\r\n    //   });\r\n    this.props.initIngredients();\r\n  }\r\n\r\n  //validate if order button should be active or disable\r\n  orderButtonValiadtor(ingredients) {\r\n    const ingSorting = Object.keys(ingredients)\r\n      .map((igKeys) => {\r\n        return ingredients[igKeys];\r\n      })\r\n      .reduce((prev, next) => {\r\n        return prev + next;\r\n      }, 0);\r\n\r\n    return ingSorting > 0;\r\n  }\r\n\r\n  //for performing action when order button clicked\r\n  orderClcikedHandler = () => {\r\n    this.setState({ OrderClicked: true });\r\n  };\r\n  //for removing modal by clicking on backdorp\r\n  removeModal = () => {\r\n    this.setState({ OrderClicked: false });\r\n  };\r\n\r\n  continueOrder = () => {\r\n    this.props.history.push({ pathname: \"/checkout\" });\r\n  };\r\n\r\n  render() {\r\n    const disableInfo = {\r\n      ...this.props.ingFromStore,\r\n    };\r\n    for (const key in disableInfo) {\r\n      disableInfo[key] = disableInfo[key] <= 0;\r\n    }\r\n\r\n    let orderSummary = null;\r\n    let burger = this.props.error ? (\r\n      <p>Ingredients can't load </p>\r\n    ) : (\r\n      <Spinner />\r\n    );\r\n\r\n    if (this.props.ingFromStore) {\r\n      burger = (\r\n        <Aux>\r\n          <Burger ingredients={this.props.ingFromStore} />\r\n          <BuildControls\r\n            addIngredient={this.props.onAddIngredient}\r\n            removeIngredient={this.props.onRemoveIngredient}\r\n            disable={disableInfo}\r\n            price={this.props.totalPriceFromStore}\r\n            purchasable={this.orderButtonValiadtor(this.props.ingFromStore)}\r\n            ordered={this.orderClcikedHandler}\r\n          />\r\n        </Aux>\r\n      );\r\n      orderSummary = (\r\n        <OrderSummary\r\n          ingredients={this.props.ingFromStore}\r\n          cancleorder={this.removeModal}\r\n          continueorder={this.continueOrder}\r\n        />\r\n      );\r\n    }\r\n\r\n    // if (this.state.loading) {\r\n    //   orderSummary = <Spinner />;\r\n    // }\r\n\r\n    return (\r\n      <Aux>\r\n        <Modal show={this.state.OrderClicked} removebackdrop={this.removeModal}>\r\n          {orderSummary}\r\n        </Modal>\r\n        {burger}\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingFromStore: state.burgerBuilder.ingredients,\r\n    totalPriceFromStore: state.burgerBuilder.totalPrice,\r\n    errorFormStore: state.burgerBuilder.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddIngredient: (ingName) =>\r\n      dispatch(burgerBuilderActions.addIngredient(ingName)),\r\n    onRemoveIngredient: (ingName) =>\r\n      dispatch(burgerBuilderActions.removeIngredient(ingName)),\r\n    initIngredients: () => dispatch(burgerBuilderActions.intitIngredients()),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(globalErrorHandler(BurgerBuilder, axios));\r\n","import * as actionType from \"./actionTypes\";\r\nimport axios from \"../../axios-order\";\r\n\r\nexport const addIngredient = (ingName) => {\r\n  return {\r\n    type: actionType.ADD_INGREDIENT,\r\n    ingredientName: ingName,\r\n  };\r\n};\r\n\r\nexport const removeIngredient = (ingName) => {\r\n  return {\r\n    type: actionType.REMOVE_INGREDIENT,\r\n    ingredientName: ingName,\r\n  };\r\n};\r\n\r\nexport const setIngredients = (ingredients) => {\r\n  return {\r\n    type: actionType.SET_INGREDIENTS,\r\n    ingredients: ingredients,\r\n  };\r\n};\r\n\r\nexport const gotErrorInIngredients = () => {\r\n  return {\r\n    type: actionType.FETCH_INGREDIENTS_FAILED,\r\n  };\r\n};\r\n\r\nexport const intitIngredients = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(\"https://itsburgerapp.firebaseio.com/ingredients.json\")\r\n      .then((response) => {\r\n        dispatch(setIngredients(response.data));\r\n      })\r\n      .catch((error) => {\r\n        dispatch(gotErrorInIngredients());\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport Burger from \"../../Burger/burger\";\r\nimport Button from \"../../UI/Button/button\";\r\nimport classes from \"./CheckoutSummary.module.css\";\r\nconst CheckoutSummary = (props) => {\r\n  return (\r\n    <div className={classes.CheckoutSummary}>\r\n      <h1>Hope You Will Like The Taste</h1>\r\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\r\n        <Burger ingredients={props.ingredients} />\r\n      </div>\r\n      <Button btntype=\"Success\" clicked={props.checkoutContinue}>\r\n        CONTINUE\r\n      </Button>\r\n      <Button btntype=\"Danger\" clicked={props.checkoutCancle}>\r\n        CANCLE\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutSummary;\r\n","import React from \"react\";\r\nimport classes from \"./input.module.css\";\r\n\r\nconst Input = (props) => {\r\n  let inputElement = null;\r\n  let inputClasses = [classes.InputElement];\r\n\r\n  if (props.invalid && props.shouldValidate && props.touched) {\r\n    inputClasses.push(classes.Invalid);\r\n  }\r\n\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n\r\n    case \"select\":\r\n      let optionsFinal = props.elementConfig.options.map((item) => {\r\n        return (\r\n          <option key={item.value} value={item.value}>\r\n            {item.display}\r\n          </option>\r\n        );\r\n      });\r\n\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(\" \")}\r\n          name=\"delivery\"\r\n          onChange={props.changed}\r\n        >\r\n          {optionsFinal}\r\n        </select>\r\n      );\r\n      break;\r\n\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n        />\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <label className={classes.Label}>{props.label.toUpperCase()}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"../../../../components/UI/Button/button\";\r\nimport Spinner from \"../../../../components/UI/Spinner/spinner\";\r\nimport classes from \"./contatc-form.module.css\";\r\nimport Aux from \"../../../../hoc/auxiliary\";\r\nimport Input from \"../../../../components/UI/Input/input\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport * as orderActions from \"../../../../store/actions/order_actions\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          placeholder: \"your name\",\r\n          type: \"text\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          isValid: false,\r\n          shouldValidate: true,\r\n          touched: false,\r\n          rules: {\r\n            required: true,\r\n          },\r\n        },\r\n      },\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          placeholder: \"your email\",\r\n          type: \"email\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          isValid: false,\r\n          shouldValidate: true,\r\n          touched: false,\r\n          rules: {\r\n            required: true,\r\n          },\r\n        },\r\n      },\r\n      city: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          placeholder: \"your city\",\r\n          type: \"text\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          isValid: false,\r\n          shouldValidate: true,\r\n          touched: false,\r\n          rules: {\r\n            required: true,\r\n          },\r\n        },\r\n      },\r\n      postalCode: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          placeholder: \"ZIP Code\",\r\n          type: \"number\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          isValid: false,\r\n          shouldValidate: true,\r\n          touched: false,\r\n          rules: {\r\n            required: true,\r\n            minLength: 4,\r\n            maxLength: 6,\r\n          },\r\n        },\r\n      },\r\n\r\n      delivery: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            { value: \"fastest\", display: \"fastest\" },\r\n            { value: \"cheapest\", display: \"cheapest\" },\r\n          ],\r\n        },\r\n        validation: {\r\n          shouldValidate: false,\r\n          rules: {\r\n            required: false,\r\n          },\r\n        },\r\n        value: \"\",\r\n      },\r\n    },\r\n    isOrderPlaceable: false,\r\n    orderButtonNotify: false,\r\n  };\r\n\r\n  validityChecker = (value, rules) => {\r\n    let itsValid = false;\r\n\r\n    if (rules.required) {\r\n      itsValid = value.trim() !== \"\";\r\n    }\r\n    if (rules.minLength && rules.maxLength) {\r\n      itsValid =\r\n        value.length >= rules.minLength && value.length <= rules.maxLength;\r\n    }\r\n\r\n    return itsValid;\r\n  };\r\n\r\n  //this function is to make our input field working, two way binding\r\n  onChangeHandler = (event, elementRef) => {\r\n    //here we just get the orderForm from state\r\n    let orderForm = { ...this.state.orderForm };\r\n    //now extract the specific form input object, name, email..\r\n    let specificOrderForm = { ...orderForm[elementRef] };\r\n    //change the value of that specific object\r\n    specificOrderForm.value = event.target.value;\r\n    //we check the validation on each single key press, real time validity check, thanks to react.\r\n    specificOrderForm.validation.isValid = this.validityChecker(\r\n      specificOrderForm.value,\r\n      specificOrderForm.validation.rules\r\n    );\r\n\r\n    //set touched property to true:\r\n    specificOrderForm.validation.touched = true;\r\n    //assing that complete object into the first clone one\r\n    orderForm[elementRef] = specificOrderForm;\r\n\r\n    // here i look thorugh all the inpout filed's isValid property value and\r\n    //main a stack in the array of true/false as a string, then I check that\r\n    //if any fasle found in the stack which means any of the field is not valid or\r\n    //empty so we will not let user place order\r\n    let checkForOrderButton;\r\n    let arr = [];\r\n    for (let item in orderForm) {\r\n      if (orderForm[item].validation.shouldValidate) {\r\n        arr.push(orderForm[item].validation.isValid.toString());\r\n      }\r\n      checkForOrderButton = !arr.includes(\"false\");\r\n    }\r\n    //update the state finally\r\n    this.setState({\r\n      orderForm: orderForm,\r\n      isOrderPlaceable: checkForOrderButton,\r\n    });\r\n  };\r\n\r\n  placeOrder = (e) => {\r\n    //to prevent page to refresh on the submission of form\r\n    e.preventDefault();\r\n\r\n    if (this.state.isOrderPlaceable) {\r\n\r\n      // want to extract each name and value from orderForm object from state and make a new object\r\n      // in which the data will be : {name: shahoz}\r\n\r\n      const formData = {};\r\n      for (const item in this.state.orderForm) {\r\n        formData[item] = this.state.orderForm[item].value;\r\n      }\r\n\r\n      const order = {\r\n        ingredient: this.props.ingFromStore,\r\n        price: this.props.totalPriceFromStore,\r\n        contactForm: formData,\r\n      };\r\n\r\n      this.props.onPlacingOrder(order);\r\n    } else {\r\n      this.setState({ orderButtonNotify: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.props.redirect) {\r\n      this.props.history.push(\"/burger_builder\");\r\n    }\r\n    //get all the keys of orderForm object in an array,\r\n    // so we can map on it to generate input fields:\r\n    let ordersFields = [];\r\n    for (const fields in this.state.orderForm) {\r\n      ordersFields.push({\r\n        id: fields,\r\n        config: this.state.orderForm[fields],\r\n      });\r\n    }\r\n\r\n    const InputField = ordersFields.map( item => {\r\n      return (\r\n        <Input\r\n          key={item.id}\r\n          label={item.id}\r\n          elementType={item.config.elementType}\r\n          elementConfig={item.config.elementConfig}\r\n          value={item.config.value}\r\n          shouldValidate={item.config.validation.shouldValidate}\r\n          invalid={!item.config.validation.isValid}\r\n          touched={item.config.validation.touched}\r\n          changed={(e) => {\r\n            this.onChangeHandler(e, item.id);\r\n          }}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Aux>\r\n        {this.props.loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <div className={classes.ContactForm}>\r\n            {this.state.orderButtonNotify ? (\r\n              <h1 style={{ border: \"1px solid red\", color: \"red\" }}>\r\n                Fill All Data Correctly\r\n              </h1>\r\n            ) : null}\r\n            <form onSubmit={this.placeOrder}>\r\n              {InputField}\r\n              <div>\r\n                <Button btntype=\"Success\"> PLACE ORDER </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingFromStore: state.burgerBuilder.ingredients,\r\n    totalPriceFromStore: state.burgerBuilder.totalPrice,\r\n    loading: state.orders.loading,\r\n    redirect: state.orders.redirect,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onPlacingOrder: (order) => dispatch(orderActions.placeOrder(order)),\r\n  };\r\n};\r\n//here i use withRouter becase although this component is load from\r\n//Route but cant get props coz it is not directly loaded but from function\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(ContactForm));\r\n","import * as actionType from \"./actionTypes\";\r\nimport axios from \"../../axios-order\";\r\n\r\nexport const doRedirect = () => {\r\n  return {\r\n    type: actionType.REDIRECT,\r\n  };\r\n};\r\n\r\nexport const doNotRedirect = () => {\r\n  return {\r\n    type: actionType.NOT_REDIRECT,\r\n  };\r\n};\r\n\r\nexport const startToPlaceOrder = () => {\r\n  return {\r\n    type: actionType.START_TO_PLACE_ORDER,\r\n  };\r\n};\r\n\r\nexport const placeOrderSuccess = (id, orderData) => {\r\n  return {\r\n    type: actionType.PLACE_ORDER_SUCCESS,\r\n    orderId: id,\r\n    orderData: orderData,\r\n  };\r\n};\r\n\r\nexport const placeOrderFail = (error) => {\r\n  return {\r\n    type: actionType.PLACE_ORDER_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const placeOrder = (orderToPost) => {\r\n  return (dispatch) => {\r\n    dispatch(startToPlaceOrder());\r\n\r\n    axios\r\n      .post(\"/orders.json\", orderToPost)\r\n      .then((response) => {\r\n        dispatch(placeOrderSuccess(response.data.name, orderToPost));\r\n        dispatch(doRedirect());\r\n        dispatch(doNotRedirect());\r\n      })\r\n      .catch((error) => {\r\n        dispatch(placeOrderFail(error));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchOrderStart = () => {\r\n  return {\r\n    type: actionType.START_TO_FETCH_ORDERS,\r\n  };\r\n};\r\n\r\nexport const fetchOrderSuccess = (orders) => {\r\n  return {\r\n    type: actionType.FETCH_ORDERS_SUCCESS,\r\n    orders: orders,\r\n  };\r\n};\r\n\r\nexport const fetchOrderFailed = (error) => {\r\n  return {\r\n    type: actionType.FETCH_ORDERS_FAIL,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const fetchOrders = () => {\r\n  return (dispatch) => {\r\n    dispatch(fetchOrderStart());\r\n    axios\r\n      .get(\"/orders.json\")\r\n      .then((res) => {\r\n        const fetchedOrders = [];\r\n        // through the rough data we get from api and also assing the id to all orders\r\n        for (const key in res.data) {\r\n          fetchedOrders.push({ ...res.data[key], id: key });\r\n        }\r\n        dispatch(fetchOrderSuccess(fetchedOrders));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(fetchOrderFailed(err));\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport CheckoutSummary from \"../../../components/Orders/CheckoutSummary/checkoutsummary\";\r\nimport ContactForm from \"./Contact Form/contact-form\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Checkout extends Component {\r\n  checkoutContinueHandler = () => {\r\n    this.props.history.replace(\"/checkout/contact-form\");\r\n    // {this.props.match.path + '/contact-form'}\r\n  };\r\n\r\n  checkoutCancleHandler = () => {\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CheckoutSummary\r\n          ingredients={this.props.ingFromStore}\r\n          checkoutCancle={this.checkoutCancleHandler}\r\n          checkoutContinue={this.checkoutContinueHandler}\r\n        />\r\n        {/* load cntactfrom component here inside function coz wants to pass my own \r\n        props here.\r\n        */}\r\n        <Route\r\n          path={this.props.match.path + \"/contact-form\"}\r\n          component={ContactForm}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ingFromStore: state.burgerBuilder.ingredients,\r\n    totalPriceFromStore: state.burgerBuilder.totalPrice,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Checkout);\r\n","import React from \"react\";\r\nimport classes from \"./order.module.css\";\r\n\r\nconst Order = (props) => {\r\n  const ingredients = [];\r\n\r\n  //creating individual object of each ingredeients \r\n  //we have in our burger which includes its price and name\r\n  for (let key in props.ingredients) {\r\n    ingredients.push({\r\n      ingredientName: key,\r\n      quantity: props.ingredients[key],\r\n    });\r\n  }\r\n// looping through all the ingredienst objects and pass them in a span to put in below tags\r\n  const ingredientsOutput = ingredients.map((item) => {\r\n    return (\r\n      <span \r\n      className = {classes.span}\r\n      key={item.ingredientName}>\r\n        {item.ingredientName} ({item.quantity})\r\n      </span>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={classes.Order}>\r\n      <p>Ingredients: {ingredientsOutput}</p>\r\n      <p>\r\n        Price: <strong>{props.price}</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import React, { Component } from \"react\";\r\nimport Order from \"../../components/Orders/order\";\r\nimport axios from \"../../axios-order\";\r\nimport * as orderFetchingAction from \"../../store/actions/index\";\r\nimport globalErrorHandler from \"../../hoc/GlobalErrorHandler/globalErrorHandler\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../../components/UI/Spinner/spinner\";\r\n\r\nclass Orders extends Component {\r\n\r\n  \r\n  componentDidMount() {\r\n    //fetching orders from firebase\r\n    this.props.forFetchingOrders();\r\n  }\r\n\r\n  render() {\r\n    let orders = <Spinner />;\r\n    if (!this.props.loading) {\r\n      orders = this.props.fetchedOrders.map((item) => {\r\n        return (\r\n          <Order\r\n            ingredients={item.ingredient}\r\n            price={item.price}\r\n            key={item.id}\r\n          />\r\n        );\r\n      });\r\n    }\r\n    return <>{orders}</>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    fetchedOrders: state.orders.orders,\r\n    loading: state.orders.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    forFetchingOrders: () => {\r\n      dispatch(orderFetchingAction.fetchOrders());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(globalErrorHandler(Orders, axios));\r\n","import React, { Component } from \"react\";\r\nimport Button from \"../../components/UI/Button/button\";\r\nimport Input from \"../../components/UI/Input/input\";\r\nimport classes from \"./auth.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as authActions from \"../../store/actions/auth_actions\";\r\nimport Spinner from \"../../components/UI/Spinner/spinner\";\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    authForm: {\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          placeholder: \"your email\",\r\n          type: \"email\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          isValid: false,\r\n          shouldValidate: true,\r\n          touched: false,\r\n          rules: {\r\n            required: true,\r\n          },\r\n        },\r\n      },\r\n      password: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          placeholder: \"your password\",\r\n          type: \"password\",\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          isValid: false,\r\n          shouldValidate: true,\r\n          touched: false,\r\n          rules: {\r\n            required: true,\r\n            minLength: 6,\r\n            maxLength: 12,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    isSubmitPossible: false,\r\n    submitButtonNotify: false,\r\n    isSignUp: true,\r\n  };\r\n\r\n  validityChecker = (value, rules) => {\r\n    let itsValid = false;\r\n\r\n    if (rules.required) {\r\n      itsValid = value.trim() !== \"\";\r\n    }\r\n    if (rules.minLength && rules.maxLength) {\r\n      itsValid =\r\n        value.length >= rules.minLength && value.length <= rules.maxLength;\r\n    }\r\n\r\n    return itsValid;\r\n  };\r\n\r\n  onChangeHandler = (event, elementRef) => {\r\n    //here we just get the orderForm from state\r\n    let authForm = { ...this.state.authForm };\r\n\r\n    //now extract the specific form input object, name, email..\r\n    let specificAuthForm = { ...authForm[elementRef] };\r\n\r\n    //change the value of that specific object\r\n    specificAuthForm.value = event.target.value;\r\n\r\n    //we check the validation on each single key press, real time validity check, thanks to react.\r\n    specificAuthForm.validation.isValid = this.validityChecker(\r\n      specificAuthForm.value,\r\n      specificAuthForm.validation.rules\r\n    );\r\n\r\n    //set touched property to true:\r\n    specificAuthForm.validation.touched = true;\r\n\r\n    //assing that complete object into the first clone one\r\n    authForm[elementRef] = specificAuthForm;\r\n\r\n    // here i look thorugh all the inpout filed's isValid property value and\r\n    //main a stack in the array of true/false as a string, then I check that\r\n    //if any false found in the stack which means any of the field is not valid or\r\n    //empty so we will not let user submit the form\r\n    let checkForSubmitButton;\r\n    let arr = [];\r\n    for (let item in authForm) {\r\n      if (authForm[item].validation.shouldValidate) {\r\n        arr.push(authForm[item].validation.isValid.toString());\r\n      }\r\n      checkForSubmitButton = !arr.includes(\"false\");\r\n    }\r\n\r\n    //update the state finally\r\n    this.setState({\r\n      authForm: authForm,\r\n      isSubmitPossible: checkForSubmitButton,\r\n    });\r\n  };\r\n\r\n  onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.props.onAuth(\r\n      this.state.authForm.email.value,\r\n      this.state.authForm.password.value,\r\n      this.state.isSignUp\r\n    );\r\n  };\r\n\r\n  signingSwitch = () => {\r\n    this.setState((prevstate) => {\r\n      return {\r\n        isSignUp: !prevstate.isSignUp,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    //get all the keys of orderForm object in an array,\r\n    // so we can map on it to generate input fields:\r\n    let authFields = [];\r\n    for (const fields in this.state.authForm) {\r\n      authFields.push({\r\n        id: fields,\r\n        config: this.state.authForm[fields],\r\n      });\r\n    }\r\n\r\n    const InputField = authFields.map((item) => {\r\n      return (\r\n        <Input\r\n          key={item.id}\r\n          label={item.id}\r\n          elementType={item.config.elementType}\r\n          elementConfig={item.config.elementConfig}\r\n          value={item.config.value}\r\n          shouldValidate={item.config.validation.shouldValidate}\r\n          invalid={!item.config.validation.isValid}\r\n          touched={item.config.validation.touched}\r\n          changed={(e) => {\r\n            this.onChangeHandler(e, item.id);\r\n          }}\r\n        />\r\n      );\r\n    });\r\n\r\n    let errorMessage = null;\r\n    if (this.props.error) {\r\n      errorMessage = <p style={{ color: \"red\" }}>{this.props.error.message}</p>;\r\n    }\r\n\r\n    return (\r\n      <div className={classes.Auth}>\r\n        {errorMessage}\r\n        <form onSubmit={this.onSubmitHandler}>\r\n          {this.props.loading ? <Spinner /> : InputField}\r\n\r\n          <Button btntype=\"Success\">Submit</Button>\r\n        </form>\r\n        <Button clicked={this.signingSwitch} btntype=\"Danger\">\r\n          Switch To {this.state.isSignUp ? \"SIGN IN\" : \"SIGN UP\"}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.authentication.loading,\r\n    error: state.authentication.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAuth: (email, pass, isSignUp) =>\r\n      dispatch(authActions.authenticate(email, pass, isSignUp)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n","import React, { Component } from \"react\";\nimport Layout from \"./hoc/Layout/layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/burger_builder\";\nimport Checkout from \"./containers/BurgerBuilder/Checkout/checkout\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Orders from \"./containers/Orders/orders\";\nimport Auth from './containers/Auth/auth'\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout>\n        \n        <Route exact path=\"/burger_builder\" component = {BurgerBuilder} />\n        <Route path = '/checkout' component = {Checkout}/>\n        <Route path = '/orders' component = {Orders}/>\n        <Route path = '/auth' component = {Auth}/>\n\n      </Layout> \n    );\n  }\n}\n\nexport default App;\n","import * as actionType from \"../actions/actionTypes\";\r\nconst INGREDIENTS_PRICES = {\r\n  cheese: 2,\r\n  salad: 1,\r\n  meat: 4,\r\n  bacon: 3,\r\n};\r\n\r\nconst initialState = {\r\n  ingredients: null,\r\n  error: false,\r\n  totalPrice: 5,\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionType.ADD_INGREDIENT:\r\n      return {\r\n        ...state,\r\n        ingredients: {\r\n          ...state.ingredients,\r\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1,\r\n        },\r\n        totalPrice:\r\n          state.totalPrice + INGREDIENTS_PRICES[action.ingredientName],\r\n      };\r\n    case actionType.REMOVE_INGREDIENT:\r\n      return {\r\n        ...state,\r\n        ingredients: {\r\n          ...state.ingredients,\r\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1,\r\n        },\r\n        totalPrice:\r\n          state.totalPrice - INGREDIENTS_PRICES[action.ingredientName],\r\n      };\r\n\r\n    case actionType.SET_INGREDIENTS:\r\n      return {\r\n        ...state,\r\n        ingredients: action.ingredients,\r\n        error: false,\r\n        totalPrice: 5\r\n      };\r\n\r\n    case actionType.FETCH_INGREDIENTS_FAILED:\r\n      return {\r\n        ...state,\r\n        error: true,\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionType from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  loading: false,\r\n  redirect: false,\r\n  error: null,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionType.REDIRECT:\r\n      return {\r\n        ...state,\r\n        redirect: true,\r\n      };\r\n\r\n    case actionType.NOT_REDIRECT:\r\n      return {\r\n        ...state,\r\n        redirect: false,\r\n      };\r\n\r\n    case actionType.START_TO_PLACE_ORDER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case actionType.PLACE_ORDER_SUCCESS:\r\n      const newOrder = {\r\n        ...action.orderData,\r\n        id: action.orderId,\r\n      };\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        orders: state.orders.concat(newOrder),\r\n      };\r\n    case actionType.PLACE_ORDER_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n      };\r\n\r\n    case actionType.START_TO_FETCH_ORDERS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case actionType.FETCH_ORDERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        orders: action.orders,\r\n      };\r\n\r\n    case actionType.FETCH_ORDERS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  idToken: null,\r\n  localId: null,\r\n  loading: null,\r\n  error: null,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.AUTH_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        idToken: action.authData.idToken,\r\n        localId: action.authData.localId,\r\n        loading: false,\r\n      };\r\n    case actionTypes.AUTH_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n      };\r\n    case actionTypes.AUTH_LOGOUT:\r\n      return {\r\n        ...state,\r\n        idToken: null,\r\n        localId: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport burgerBuilderReducers from \"./store/reducers/burger_builder_reducers\";\nimport ordersReducers from './store/reducers/order_reducers'\nimport authReducers  from './store/reducers/auth_reducers'\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducers,\n  orders: ordersReducers,\n  authentication: authReducers,\n})\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n  \n);\n\nconst app = (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n"],"sourceRoot":""}